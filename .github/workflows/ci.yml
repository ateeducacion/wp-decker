---
name: CI

on:
  pull_request:
  push:
    tags:
      - '*'
    branches:
      - '*' 

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      - name: Pre-pull Docker images
        run: |
          docker pull mariadb:lts
          docker pull wordpress
          docker pull wordpress:cli

      - name: PHP setup
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'  # Adjust the version according to your needs
          extensions: mbstring, intl, curl, dom, json, pdo, mysql, xml, zip

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Run code linting
        run: make lint

      - name: Install gettext
        run: sudo apt-get install -y gettext

      - name: Check untranslated strings
        run: make check-untranslated

      # Install wp-env globally
      - name: Setup wp-env
        run: npm -g --no-fund i @wordpress/env

      # Start wp-env environment
      - name: Start wp-env
        run: make up

      - name: Run plugin check
        run: make check-plugin

      - name: Run unit tests
        run: make test

      # Determine the branch name
      - name: Set branch name for blueprint URL
        shell: bash
        run: |
          if [ "${GITHUB_EVENT_NAME}" = "pull_request" ]; then
            echo "BRANCH_NAME=${GITHUB_HEAD_REF}" >> $GITHUB_ENV
          else
            echo "BRANCH_NAME=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          fi

      # Determine the branch name
      - name: Set branch name for blueprint URL
        shell: bash
        run: |
          if [ "${GITHUB_EVENT_NAME}" = "pull_request" ]; then
            echo "BRANCH_NAME=${GITHUB_HEAD_REF}" >> $GITHUB_ENV
          else
            echo "BRANCH_NAME=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          fi

      # Replace main.zip with <BRANCH_NAME>.zip in blueprint.json
      - name: Patch blueprint.json with branch ZIP
        run: |
          sed -i "s|refs/heads/main.zip|refs/heads/${BRANCH_NAME}.zip|g" blueprint.json

      # Convert blueprint.json to a single line
      - name: Encode blueprint for Playground
        id: blueprint
        run: |
          JSON_BLUEPRINT=$(jq -c . blueprint.json | jq -sRr @uri)
          echo "JSON_BLUEPRINT=$JSON_BLUEPRINT" >> $GITHUB_ENV

      # Show final Playground URL in the Summary
      - name: Add Playground URL to summary
        run: |
          echo "[Test in WP Playground](https://playground.wordpress.net/#${JSON_BLUEPRINT})" >> $GITHUB_STEP_SUMMARY

      # Create a GitHub Check Run with the Playground URL
      - name: Create a check with a test link
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const jsonBlueprint = process.env.JSON_BLUEPRINT;
            const playgroundUrl = `https://playground.wordpress.net/#${jsonBlueprint}`;
            github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: "Test on WP playground",
              head_sha: context.payload.pull_request ? context.payload.pull_request.head.sha : context.sha,
              status: "completed",
              conclusion: "neutral",
              output: {
                title: "Test in WP Playground",
                summary: `[Test in WP Playground](${playgroundUrl})`
              }
            });
